layer 1
----------
<diffusion/gaussian_diffusion.py>
->all standard and third party imports

<diffusion/sample.py>
-> gaussian_diffusion
-> k_diffusion *

<models/download.py>
-> configs.py *

layer 2
-----------
<diffusion/k_diffusion.py>
->gaussian_diffusion

<models/configs.py> 
->generation/latent_diffusion *
->generation/perceiver *
->generation/pooled_mlp *
->generation/transformer *
->models/nerf/model *
->models/nerf/renderer *
->models/nerstf/mlp *
->models/nerstf/renderer *
->models/nn/meta *
->models/stf/mlp *
->models/stf/renderer *
->models/transmitter/base *
->models/transmitter/channels_encoder *
->models/transmitter/multiview_encoder *
->models/transmitter/pc_encoder *
->models/volume *

#TODO : Well, might not need all of these, so we'll se later again

layer 3
---------------------
<generation/latent_diffusion.py>
none

<generation/perceiver.py>
->models/nn/checkpoint *
->generation/transformer
-> generation/util *

<generation/pooled_mlp>
->.util

<generation/transformer>
->models/nn/checkpoint
->generation/pretrained_clip
->.util

<nerf/model>
->models.nn.checkpoint
->models.nn.encoding
->models.nn.meta
->models.nn.ops
->models.nn.utils
->models.query
->util.collections

<nerf/renderer>
->models.nn.meta
->models.renderer
->models.volume
->util.collections
->nerf.model
->nerf.ray

<nerstf/mlp>
->models.nn.ops
->models.query
->models.stf.mlp
->util.collections

<nerstf/renderer>
->nerf.model
->nerf.ray
->nn.meta
->nn.utils
->models.query
->models.renderer
->models.stf.base
->models.stf.renderer
->models.volume
->rendering.blender.constants
->util.collections


<nn.meta>
->util.collections

<stf/mlp>
->models.nn.checkpoint
->models.nn.encoding
->models.nn.meta 
->models.nn.ops 
->models.query  
->util.collections 
->stf/base

<stf/renderer>
->models.nn.camera 
->models.nn.meta 
->models.nn.utils 
->models.query 
->models.renderer 
->models.volume 
->rendering.blender.constants
->rendering.mc 
->rendering.torch_mesh 
->rendering.view_data 
->util.collections 
->stf.base
->rendering.pytorch3d_util
->rendering.raycast.types
->rendering.raycast.render


<transmitter/base>
models.renderer
util.collections
transmitter/bottleneck
transmitter/params_proj

<transmitter/channels_encoder>
->models.generation.perceiver
->models.generation.transformer
->models.nn.camera
->models.nn.encoding
->models.nn.ops
->rendering.point_cloud
->rendering.view_data
->util.collections
->transmitter/base

<transmitter/multiview_encoder>
->models.generation.transformer
->rendering.view_data
->util.collections
->transmitter.base

<transmitter/pc_encoder>
->models.generation.perceiver
->models.generation.transformer
->models.nn.encoding
->rendering.view_data
->util.collections
->transmitter.base
->transmitter.channels_encoder


<models/volume>
->nn.meta
->nn.utils

layer 4
----------------------
